{"version":3,"sources":["Context/ChatProvider.js","components/Authentication/Login.js","components/Authentication/Signup.js","Pages/Homepage.js","components/SingleChat.js","config/ChatLogics.js","components/miscellaneous/ProfileModal.js","components/ScrollableChat.js","components/userAvatar/UserBadgeItem.js","components/userAvatar/UserListItem.js","components/miscellaneous/UpdateGroupChatModal.js","components/Chatbox.js","components/ChatLoading.js","components/miscellaneous/GroupChatModal.js","components/MyChats.js","components/miscellaneous/SideDrawer.js","Pages/Chatpage.js","App.js","reportWebVitals.js","index.js"],"names":["ChatContext","createContext","ChatState","useContext","ChatProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","selectedChat","setSelectedChat","_useState3","_useState4","user","setUser","_useState5","_useState6","notification","setNotification","_useState7","_useState8","chats","setChats","history","useHistory","useEffect","userInfo","JSON","parse","localStorage","getItem","push","_jsx","Provider","value","Login","show","setShow","toast","useToast","email","setEmail","password","setPassword","loading","setLoading","submitHandler","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","_yield$axios$post","data","wrap","_context","prev","next","title","status","duration","isClosable","position","abrupt","headers","axios","post","sent","setItem","stringify","t0","description","response","message","stop","apply","arguments","_jsxs","VStack","spacing","FormControl","id","isRequired","FormLabel","Input","type","placeholder","onChange","e","target","InputGroup","size","InputRightElement","width","Button","h","onClick","colorScheme","style","marginTop","isLoading","variant","Signup","handleClick","name","setName","confirmpassword","setConfirmpassword","_useState9","_useState10","_useState11","_useState12","pic","setPic","_useState13","_useState14","picLoading","setPicLoading","console","log","p","accept","pics","undefined","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","postDetails","files","Homepage","socket","selectedChatCompare","Container","maxW","centerContent","Box","d","justifyContent","bg","w","m","borderRadius","borderWidth","Text","fontSize","fontFamily","Tabs","isFitted","TabList","mb","Tab","TabPanels","TabPanel","isSameSenderMargin","messages","i","userId","length","sender","_id","isSameSender","isLastMessage","isSameUser","getSender","loggedUser","users","_users$","ProfileModal","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","_Fragment","IconButton","base","icon","ViewIcon","Modal","isCentered","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","flexDir","alignItems","Image","boxSize","src","alt","md","ModalFooter","ScrollableChat","ScrollableFeed","map","display","Tooltip","label","placement","hasArrow","Avatar","mt","mr","cursor","backgroundColor","concat","marginLeft","padding","maxWidth","content","UserBadgeItem","handleFunction","admin","Badge","px","py","CloseIcon","pl","UserListItem","_hover","background","color","UpdateGroupChatModal","fetchMessages","fetchAgain","setFetchAgain","groupChatName","setGroupChatName","search","setSearch","searchResult","setSearchResult","renameloading","setRenameLoading","_ChatState","handleSearch","_ref2","query","_yield$axios$get","Authorization","token","get","_x","handleRename","_ref3","_callee2","_yield$axios$put","_context2","put","chatId","chatName","handleAddUser","_ref4","_callee3","user1","_yield$axios$put2","_context3","find","u","groupAdmin","_x2","handleRemove","_ref5","_callee4","_yield$axios$put3","_context4","_x3","flexWrap","pb","ml","Spinner","SingleChat","setMessages","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","emit","sendMessage","event","key","_toConsumableArray","io","on","newMessageRecieved","chat","includes","ArrowBackIcon","isGroupChat","toUpperCase","overflowY","alignSelf","margin","className","onKeyDown","Lottie","options","marginBottom","lastTypingTime","Date","getTime","setTimeout","Chatbox","ChatLoading","Stack","Skeleton","height","GroupChatModal","selectedUsers","setSelectedUsers","handleSubmit","delUser","filter","sel","slice","userToAdd","MyChats","setLoggedUser","fetchChats","lg","rightIcon","AddIcon","latestMessage","substring","SideDrawer","loadingChat","setLoadingChat","accessChat","c","Menu","MenuButton","NotificationBadge","count","effect","Effect","SCALE","BellIcon","MenuList","notif","MenuItem","n","as","ChevronDownIcon","MenuDivider","removeItem","Drawer","DrawerOverlay","DrawerContent","DrawerHeader","borderBottomWidth","DrawerBody","Chatpage","App","Route","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","ChakraProvider","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.139e900b.chunk.js","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ChatContext = createContext();\r\n\r\nconst ChatProvider = ({ children }) => {\r\n  const [selectedChat, setSelectedChat] = useState();\r\n  const [user, setUser] = useState();\r\n  const [notification, setNotification] = useState([]);\r\n  const [chats, setChats] = useState();\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    setUser(userInfo);\r\n\r\n    if (!userInfo) history.push(\"/\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [history]);\r\n\r\n  return (\r\n    <ChatContext.Provider\r\n      value={{\r\n        selectedChat,\r\n        setSelectedChat,\r\n        user,\r\n        setUser,\r\n        notification,\r\n        setNotification,\r\n        chats,\r\n        setChats,\r\n      }}\r\n    >\r\n      {children}\r\n    </ChatContext.Provider>\r\n  );\r\n};\r\n\r\nexport const ChatState = () => {\r\n  return useContext(ChatContext);\r\n};\r\n\r\nexport default ChatProvider;\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\r\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\r\nimport { VStack } from \"@chakra-ui/layout\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\n\r\nconst Login = () => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClick = () => setShow(!show);\r\n  const toast = useToast();\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const history = useHistory();\r\n  const { setUser } = ChatState();\r\n\r\n  const submitHandler = async () => {\r\n    setLoading(true);\r\n    if (!email || !password) {\r\n      toast({\r\n        title: \"Please Fill all the Feilds\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        \"/api/user/login\",\r\n        { email, password },\r\n        config\r\n      );\r\n\r\n      toast({\r\n        title: \"Login Successful\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setUser(data);\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setLoading(false);\r\n      history.push(\"/chats\");\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack spacing=\"10px\">\r\n      <FormControl id=\"email\" isRequired>\r\n        <FormLabel>Email Address</FormLabel>\r\n        <Input\r\n          value={email}\r\n          type=\"email\"\r\n          placeholder=\"Enter Your Email Address\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </FormControl>\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Password</FormLabel>\r\n        <InputGroup size=\"md\">\r\n          <Input\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Enter password\"\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n      <Button\r\n        colorScheme=\"blue\"\r\n        width=\"100%\"\r\n        style={{ marginTop: 15 }}\r\n        onClick={submitHandler}\r\n        isLoading={loading}\r\n      >\r\n        Login\r\n      </Button>\r\n      <Button\r\n        variant=\"solid\"\r\n        colorScheme=\"red\"\r\n        width=\"100%\"\r\n        onClick={() => {\r\n          setEmail(\"guest@example.com\");\r\n          setPassword(\"123456\");\r\n        }}\r\n      >\r\n        Get Guest User Credentials\r\n      </Button>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\r\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\r\nimport { VStack } from \"@chakra-ui/layout\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Signup = () => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClick = () => setShow(!show);\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n\r\n  const [name, setName] = useState();\r\n  const [email, setEmail] = useState();\r\n  const [confirmpassword, setConfirmpassword] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [pic, setPic] = useState();\r\n  const [picLoading, setPicLoading] = useState(false);\r\n\r\n  const submitHandler = async () => {\r\n    setPicLoading(true);\r\n    if (!name || !email || !password || !confirmpassword) {\r\n      toast({\r\n        title: \"Please Fill all the Feilds\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setPicLoading(false);\r\n      return;\r\n    }\r\n    if (password !== confirmpassword) {\r\n      toast({\r\n        title: \"Passwords Do Not Match\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n    console.log(name, email, password, pic);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        \"/api/user\",\r\n        {\r\n          name,\r\n          email,\r\n          password,\r\n          pic,\r\n        },\r\n        config\r\n      );\r\n      console.log(data);\r\n      toast({\r\n        title: \"Registration Successful\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setPicLoading(false);\r\n      history.push(\"/chats\");\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setPicLoading(false);\r\n    }\r\n  };\r\n\r\n  const postDetails = (pics) => {\r\n    setPicLoading(true);\r\n    if (pics === undefined) {\r\n      toast({\r\n        title: \"Please Select an Image!\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n    console.log(pics);\r\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\r\n      const data = new FormData();\r\n      data.append(\"file\", pics);\r\n      data.append(\"upload_preset\", \"chat-app\");\r\n      data.append(\"cloud_name\", \"dwiurhb9g\");\r\n      fetch(\"https://api.cloudinary.com/v1_1/dwiurhb9g/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setPic(data.url.toString());\r\n          console.log(data.url.toString());\r\n          setPicLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setPicLoading(false);\r\n        });\r\n    } else {\r\n      toast({\r\n        title: \"Please Select an Image!\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setPicLoading(false);\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack spacing=\"5px\">\r\n      <FormControl id=\"first-name\" isRequired>\r\n        <FormLabel>Name</FormLabel>\r\n        <Input\r\n          placeholder=\"Enter Your Name\"\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n      </FormControl>\r\n      <FormControl id=\"email\" isRequired>\r\n        <FormLabel>Email Address</FormLabel>\r\n        <Input\r\n          type=\"email\"\r\n          placeholder=\"Enter Your Email Address\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </FormControl>\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Password</FormLabel>\r\n        <InputGroup size=\"md\">\r\n          <Input\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Enter Password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Confirm Password</FormLabel>\r\n        <InputGroup size=\"md\">\r\n          <Input\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Confirm password\"\r\n            onChange={(e) => setConfirmpassword(e.target.value)}\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n      <FormControl id=\"pic\">\r\n        <FormLabel>Upload your Picture</FormLabel>\r\n        <Input\r\n          type=\"file\"\r\n          p={1.5}\r\n          accept=\"image/*\"\r\n          onChange={(e) => postDetails(e.target.files[0])}\r\n        />\r\n      </FormControl>\r\n      <Button\r\n        colorScheme=\"blue\"\r\n        width=\"100%\"\r\n        style={{ marginTop: 15 }}\r\n        onClick={submitHandler}\r\n        isLoading={picLoading}\r\n      >\r\n        Sign Up\r\n      </Button>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import {\r\n  Box,\r\n  Container,\r\n  Tab,\r\n  TabList,\r\n  TabPanel,\r\n  TabPanels,\r\n  Tabs,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport Login from \"../components/Authentication/Login\";\r\nimport Signup from \"../components/Authentication/Signup\";\r\n\r\nfunction Homepage() {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n\r\n    if (user) history.push(\"/chats\");\r\n  }, [history]);\r\n\r\n  return (\r\n    <Container maxW=\"xl\" centerContent>\r\n      <Box\r\n        d=\"flex\"\r\n        justifyContent=\"center\"\r\n        p={3}\r\n        bg=\"white\"\r\n        w=\"100%\"\r\n        m=\"40px 0 15px 0\"\r\n        borderRadius=\"lg\"\r\n        borderWidth=\"1px\"\r\n      >\r\n        <Text fontSize=\"4xl\" fontFamily=\"Adobe Caslon Italic\">\r\n          Varun-Chat-Wave\r\n        </Text>\r\n      </Box>\r\n      <Box bg=\"white\" w=\"100%\" p={4} borderRadius=\"lg\" borderWidth=\"1px\">\r\n        <Tabs isFitted variant=\"soft-rounded\">\r\n          <TabList mb=\"1em\">\r\n            <Tab>Login</Tab>\r\n            <Tab>Sign Up</Tab>\r\n          </TabList>\r\n          <TabPanels>\r\n            <TabPanel>\r\n              <Login />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <Signup />\r\n            </TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import { FormControl } from \"@chakra-ui/form-control\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport \"./styles.css\";\r\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\r\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\r\nimport ScrollableChat from \"./ScrollableChat\";\r\nimport Lottie from \"react-lottie\";\r\nimport animationData from \"../animations/typing.json\";\r\n\r\nimport io from \"socket.io-client\";\r\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nconst ENDPOINT = \"http://localhost:5000\"; // \"https://talk-a-tive.herokuapp.com\"; -> After deployment\r\nvar socket, selectedChatCompare;\r\n\r\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [socketConnected, setSocketConnected] = useState(false);\r\n  const [typing, setTyping] = useState(false);\r\n  const [istyping, setIsTyping] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: animationData,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\",\r\n    },\r\n  };\r\n  const { selectedChat, setSelectedChat, user, notification, setNotification } =\r\n    ChatState();\r\n\r\n  const fetchMessages = async () => {\r\n    if (!selectedChat) return;\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      setLoading(true);\r\n\r\n      const { data } = await axios.get(\r\n        `/api/message/${selectedChat._id}`,\r\n        config\r\n      );\r\n      setMessages(data);\r\n      setLoading(false);\r\n\r\n      socket.emit(\"join chat\", selectedChat._id);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Messages\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const sendMessage = async (event) => {\r\n    if (event.key === \"Enter\" && newMessage) {\r\n      socket.emit(\"stop typing\", selectedChat._id);\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        };\r\n        setNewMessage(\"\");\r\n        const { data } = await axios.post(\r\n          \"/api/message\",\r\n          {\r\n            content: newMessage,\r\n            chatId: selectedChat,\r\n          },\r\n          config\r\n        );\r\n        socket.emit(\"new message\", data);\r\n        setMessages([...messages, data]);\r\n      } catch (error) {\r\n        toast({\r\n          title: \"Error Occured!\",\r\n          description: \"Failed to send the Message\",\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n    socket.emit(\"setup\", user);\r\n    socket.on(\"connected\", () => setSocketConnected(true));\r\n    socket.on(\"typing\", () => setIsTyping(true));\r\n    socket.on(\"stop typing\", () => setIsTyping(false));\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchMessages();\r\n\r\n    selectedChatCompare = selectedChat;\r\n    // eslint-disable-next-line\r\n  }, [selectedChat]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message recieved\", (newMessageRecieved) => {\r\n      if (\r\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\r\n        selectedChatCompare._id !== newMessageRecieved.chat._id\r\n      ) {\r\n        if (!notification.includes(newMessageRecieved)) {\r\n          setNotification([newMessageRecieved, ...notification]);\r\n          setFetchAgain(!fetchAgain);\r\n        }\r\n      } else {\r\n        setMessages([...messages, newMessageRecieved]);\r\n      }\r\n    });\r\n  });\r\n\r\n  const typingHandler = (e) => {\r\n    setNewMessage(e.target.value);\r\n\r\n    if (!socketConnected) return;\r\n\r\n    if (!typing) {\r\n      setTyping(true);\r\n      socket.emit(\"typing\", selectedChat._id);\r\n    }\r\n    let lastTypingTime = new Date().getTime();\r\n    var timerLength = 3000;\r\n    setTimeout(() => {\r\n      var timeNow = new Date().getTime();\r\n      var timeDiff = timeNow - lastTypingTime;\r\n      if (timeDiff >= timerLength && typing) {\r\n        socket.emit(\"stop typing\", selectedChat._id);\r\n        setTyping(false);\r\n      }\r\n    }, timerLength);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {selectedChat ? (\r\n        <>\r\n          <Text\r\n            fontSize={{ base: \"28px\", md: \"30px\" }}\r\n            pb={3}\r\n            px={2}\r\n            w=\"100%\"\r\n            fontFamily=\"Adobe Caslon Italic\"\r\n            d=\"flex\"\r\n            justifyContent={{ base: \"space-between\" }}\r\n            alignItems=\"center\"\r\n          >\r\n            <IconButton\r\n              d={{ base: \"flex\", md: \"none\" }}\r\n              icon={<ArrowBackIcon />}\r\n              onClick={() => setSelectedChat(\"\")}\r\n            />\r\n            {messages &&\r\n              (!selectedChat.isGroupChat ? (\r\n                <>\r\n                  {getSender(user, selectedChat.users)}\r\n                  <ProfileModal\r\n                    user={getSenderFull(user, selectedChat.users)}\r\n                  />\r\n                </>\r\n              ) : (\r\n                <>\r\n                  {selectedChat.chatName.toUpperCase()}\r\n                  <UpdateGroupChatModal\r\n                    fetchMessages={fetchMessages}\r\n                    fetchAgain={fetchAgain}\r\n                    setFetchAgain={setFetchAgain}\r\n                  />\r\n                </>\r\n              ))}\r\n          </Text>\r\n          <Box\r\n            d=\"flex\"\r\n            flexDir=\"column\"\r\n            justifyContent=\"flex-end\"\r\n            p={3}\r\n            bg=\"#E8E8E8\"\r\n            w=\"100%\"\r\n            h=\"100%\"\r\n            borderRadius=\"lg\"\r\n            overflowY=\"hidden\"\r\n          >\r\n            {loading ? (\r\n              <Spinner\r\n                size=\"xl\"\r\n                w={20}\r\n                h={20}\r\n                alignSelf=\"center\"\r\n                margin=\"auto\"\r\n              />\r\n            ) : (\r\n              <div className=\"messages\">\r\n                <ScrollableChat messages={messages} />\r\n              </div>\r\n            )}\r\n\r\n            <FormControl\r\n              onKeyDown={sendMessage}\r\n              id=\"first-name\"\r\n              isRequired\r\n              mt={3}\r\n            >\r\n              {istyping ? (\r\n                <div>\r\n                  <Lottie\r\n                    options={defaultOptions}\r\n                    // height={50}\r\n                    width={70}\r\n                    style={{ marginBottom: 15, marginLeft: 0 }}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <Input\r\n                variant=\"filled\"\r\n                bg=\"#E0E0E0\"\r\n                placeholder=\"Enter a message..\"\r\n                value={newMessage}\r\n                onChange={typingHandler}\r\n              />\r\n            </FormControl>\r\n          </Box>\r\n        </>\r\n      ) : (\r\n        // to get socket.io on same page\r\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\r\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Adobe Caslon Italic\">\r\n            Click on a user to start chatting\r\n          </Text>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleChat;\r\n","export const isSameSenderMargin = (messages, m, i, userId) => {\r\n  // console.log(i === messages.length - 1);\r\n\r\n  if (\r\n    i < messages.length - 1 &&\r\n    messages[i + 1].sender._id === m.sender._id &&\r\n    messages[i].sender._id !== userId\r\n  )\r\n    return 33;\r\n  else if (\r\n    (i < messages.length - 1 &&\r\n      messages[i + 1].sender._id !== m.sender._id &&\r\n      messages[i].sender._id !== userId) ||\r\n    (i === messages.length - 1 && messages[i].sender._id !== userId)\r\n  )\r\n    return 0;\r\n  else return \"auto\";\r\n};\r\n\r\nexport const isSameSender = (messages, m, i, userId) => {\r\n  return (\r\n    i < messages.length - 1 &&\r\n    (messages[i + 1].sender._id !== m.sender._id ||\r\n      messages[i + 1].sender._id === undefined) &&\r\n    messages[i].sender._id !== userId\r\n  );\r\n};\r\n\r\nexport const isLastMessage = (messages, i, userId) => {\r\n  return (\r\n    i === messages.length - 1 &&\r\n    messages[messages.length - 1].sender._id !== userId &&\r\n    messages[messages.length - 1].sender._id\r\n  );\r\n};\r\n\r\nexport const isSameUser = (messages, m, i) => {\r\n  return i > 0 && messages[i - 1].sender._id === m.sender._id;\r\n};\r\n\r\nexport const getSender = (loggedUser, users) => {\r\n  return users[0]?._id === loggedUser?._id ? users[1].name : users[0].name;\r\n};\r\n\r\nexport const getSenderFull = (loggedUser, users) => {\r\n  return users[0]._id === loggedUser._id ? users[1] : users[0];\r\n};\r\n","import { ViewIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  useDisclosure,\r\n  IconButton,\r\n  Text,\r\n  Image,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst ProfileModal = ({ user, children }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  return (\r\n    <>\r\n      {children ? (\r\n        <span onClick={onOpen}>{children}</span>\r\n      ) : (\r\n        <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\r\n      )}\r\n      <Modal size=\"lg\" onClose={onClose} isOpen={isOpen} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent h=\"410px\">\r\n          <ModalHeader\r\n            fontSize=\"40px\"\r\n            fontFamily=\"Adobe Caslon Italic\"\r\n            d=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            {user.name}\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody\r\n            d=\"flex\"\r\n            flexDir=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Image\r\n              borderRadius=\"full\"\r\n              boxSize=\"150px\"\r\n              src={user.pic}\r\n              alt={user.name}\r\n            />\r\n            <Text\r\n              fontSize={{ base: \"28px\", md: \"30px\" }}\r\n              fontFamily=\"Adobe Caslon Italic\"\r\n            >\r\n              Email: {user.email}\r\n            </Text>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button onClick={onClose}>Close</Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileModal;\r\n","import { Avatar } from \"@chakra-ui/avatar\";\r\nimport { Tooltip } from \"@chakra-ui/tooltip\";\r\nimport ScrollableFeed from \"react-scrollable-feed\";\r\nimport {\r\n  isLastMessage,\r\n  isSameSender,\r\n  isSameSenderMargin,\r\n  isSameUser,\r\n} from \"../config/ChatLogics\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\n\r\nconst ScrollableChat = ({ messages }) => {\r\n  const { user } = ChatState();\r\n\r\n  return (\r\n    <ScrollableFeed>\r\n      {messages &&\r\n        messages.map((m, i) => (\r\n          <div style={{ display: \"flex\" }} key={m._id}>\r\n            {(isSameSender(messages, m, i, user._id) ||\r\n              isLastMessage(messages, i, user._id)) && (\r\n              <Tooltip label={m.sender.name} placement=\"bottom-start\" hasArrow>\r\n                <Avatar\r\n                  mt=\"7px\"\r\n                  mr={1}\r\n                  size=\"sm\"\r\n                  cursor=\"pointer\"\r\n                  name={m.sender.name}\r\n                  src={m.sender.pic}\r\n                />\r\n              </Tooltip>\r\n            )}\r\n            <span\r\n              style={{\r\n                backgroundColor: `${\r\n                  m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"\r\n                }`,\r\n                marginLeft: isSameSenderMargin(messages, m, i, user._id),\r\n                marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\r\n                borderRadius: \"20px\",\r\n                padding: \"5px 15px\",\r\n                maxWidth: \"75%\",\r\n              }}\r\n            >\r\n              {m.content}\r\n            </span>\r\n          </div>\r\n        ))}\r\n    </ScrollableFeed>\r\n  );\r\n};\r\n\r\nexport default ScrollableChat;\r\n","import { CloseIcon } from \"@chakra-ui/icons\";\r\nimport { Badge } from \"@chakra-ui/layout\";\r\n\r\nconst UserBadgeItem = ({ user, handleFunction, admin }) => {\r\n  return (\r\n    <Badge\r\n      px={2}\r\n      py={1}\r\n      borderRadius=\"lg\"\r\n      m={1}\r\n      mb={2}\r\n      variant=\"solid\"\r\n      fontSize={12}\r\n      colorScheme=\"purple\"\r\n      cursor=\"pointer\"\r\n      onClick={handleFunction}\r\n    >\r\n      {user.name}\r\n      {admin === user._id && <span> (Admin)</span>}\r\n      <CloseIcon pl={1} />\r\n    </Badge>\r\n  );\r\n};\r\n\r\nexport default UserBadgeItem;\r\n","import { Avatar } from \"@chakra-ui/avatar\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\n\r\nconst UserListItem = ({ handleFunction }) => {\r\n  const { user } = ChatState();\r\n\r\n  return (\r\n    <Box\r\n      onClick={handleFunction}\r\n      cursor=\"pointer\"\r\n      bg=\"#E8E8E8\"\r\n      _hover={{\r\n        background: \"#38B2AC\",\r\n        color: \"white\",\r\n      }}\r\n      w=\"100%\"\r\n      d=\"flex\"\r\n      alignItems=\"center\"\r\n      color=\"black\"\r\n      px={3}\r\n      py={2}\r\n      mb={2}\r\n      borderRadius=\"lg\"\r\n    >\r\n      <Avatar\r\n        mr={2}\r\n        size=\"sm\"\r\n        cursor=\"pointer\"\r\n        name={user.name}\r\n        src={user.pic}\r\n      />\r\n      <Box>\r\n        <Text>{user.name}</Text>\r\n        <Text fontSize=\"xs\">\r\n          <b>Email : </b>\r\n          {user.email}\r\n        </Text>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UserListItem;\r\n","import { ViewIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  useDisclosure,\r\n  FormControl,\r\n  Input,\r\n  useToast,\r\n  Box,\r\n  IconButton,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\r\nimport UserListItem from \"../userAvatar/UserListItem\";\r\n\r\nconst UpdateGroupChatModal = ({ fetchMessages, fetchAgain, setFetchAgain }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [groupChatName, setGroupChatName] = useState();\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [renameloading, setRenameLoading] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const { selectedChat, setSelectedChat, user } = ChatState();\r\n\r\n  const handleSearch = async (query) => {\r\n    setSearch(query);\r\n    if (!query) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\r\n      console.log(data);\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Search Results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRename = async () => {\r\n    if (!groupChatName) return;\r\n\r\n    try {\r\n      setRenameLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        `/api/chat/rename`,\r\n        {\r\n          chatId: selectedChat._id,\r\n          chatName: groupChatName,\r\n        },\r\n        config\r\n      );\r\n\r\n      console.log(data._id);\r\n      // setSelectedChat(\"\");\r\n      setSelectedChat(data);\r\n      setFetchAgain(!fetchAgain);\r\n      setRenameLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setRenameLoading(false);\r\n    }\r\n    setGroupChatName(\"\");\r\n  };\r\n\r\n  const handleAddUser = async (user1) => {\r\n    if (selectedChat.users.find((u) => u._id === user1._id)) {\r\n      toast({\r\n        title: \"User Already in group!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (selectedChat.groupAdmin._id !== user._id) {\r\n      toast({\r\n        title: \"Only admins can add someone!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        `/api/chat/groupadd`,\r\n        {\r\n          chatId: selectedChat._id,\r\n          userId: user1._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      setSelectedChat(data);\r\n      setFetchAgain(!fetchAgain);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n    setGroupChatName(\"\");\r\n  };\r\n\r\n  const handleRemove = async (user1) => {\r\n    if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\r\n      toast({\r\n        title: \"Only admins can remove someone!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        `/api/chat/groupremove`,\r\n        {\r\n          chatId: selectedChat._id,\r\n          userId: user1._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      user1._id === user._id ? setSelectedChat() : setSelectedChat(data);\r\n      setFetchAgain(!fetchAgain);\r\n      fetchMessages();\r\n      setLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n    setGroupChatName(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\r\n\r\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader\r\n            fontSize=\"35px\"\r\n            fontFamily=\"Adobe Caslon Italic\"\r\n            d=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            {selectedChat.chatName}\r\n          </ModalHeader>\r\n\r\n          <ModalCloseButton />\r\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\r\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\" pb={3}>\r\n              {selectedChat.users.map((u) => (\r\n                <UserBadgeItem\r\n                  key={u._id}\r\n                  user={u}\r\n                  admin={selectedChat.groupAdmin}\r\n                  handleFunction={() => handleRemove(u)}\r\n                />\r\n              ))}\r\n            </Box>\r\n            <FormControl d=\"flex\">\r\n              <Input\r\n                placeholder=\"Chat Name\"\r\n                mb={3}\r\n                value={groupChatName}\r\n                onChange={(e) => setGroupChatName(e.target.value)}\r\n              />\r\n              <Button\r\n                variant=\"solid\"\r\n                colorScheme=\"teal\"\r\n                ml={1}\r\n                isLoading={renameloading}\r\n                onClick={handleRename}\r\n              >\r\n                Update\r\n              </Button>\r\n            </FormControl>\r\n            <FormControl>\r\n              <Input\r\n                placeholder=\"Add User to group\"\r\n                mb={1}\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n              />\r\n            </FormControl>\r\n\r\n            {loading ? (\r\n              <Spinner size=\"lg\" />\r\n            ) : (\r\n              searchResult?.map((user) => (\r\n                <UserListItem\r\n                  key={user._id}\r\n                  user={user}\r\n                  handleFunction={() => handleAddUser(user)}\r\n                />\r\n              ))\r\n            )}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button onClick={() => handleRemove(user)} colorScheme=\"red\">\r\n              Leave Group\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateGroupChatModal;\r\n","import { Box } from \"@chakra-ui/layout\";\r\nimport \"./styles.css\";\r\nimport SingleChat from \"./SingleChat\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\n\r\nconst Chatbox = ({ fetchAgain, setFetchAgain }) => {\r\n  const { selectedChat } = ChatState();\r\n\r\n  return (\r\n    <Box\r\n      d={{ base: selectedChat ? \"flex\" : \"none\", md: \"flex\" }}\r\n      alignItems=\"center\"\r\n      flexDir=\"column\"\r\n      p={3}\r\n      bg=\"white\"\r\n      w={{ base: \"100%\", md: \"68%\" }}\r\n      borderRadius=\"lg\"\r\n      borderWidth=\"1px\"\r\n    >\r\n      <SingleChat fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chatbox;\r\n","import { Stack } from \"@chakra-ui/layout\";\r\nimport { Skeleton } from \"@chakra-ui/skeleton\";\r\n\r\nconst ChatLoading = () => {\r\n  return (\r\n    <Stack>\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default ChatLoading;\r\n","import {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  useDisclosure,\r\n  FormControl,\r\n  Input,\r\n  useToast,\r\n  Box,\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\r\nimport UserListItem from \"../userAvatar/UserListItem\";\r\n\r\nconst GroupChatModal = ({ children }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [groupChatName, setGroupChatName] = useState();\r\n  const [selectedUsers, setSelectedUsers] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const { user, chats, setChats } = ChatState();\r\n\r\n  const handleGroup = (userToAdd) => {\r\n    if (selectedUsers.includes(userToAdd)) {\r\n      toast({\r\n        title: \"User already added\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    setSelectedUsers([...selectedUsers, userToAdd]);\r\n  };\r\n\r\n  const handleSearch = async (query) => {\r\n    setSearch(query);\r\n    if (!query) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\r\n      console.log(data);\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Search Results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (delUser) => {\r\n    setSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!groupChatName || !selectedUsers) {\r\n      toast({\r\n        title: \"Please fill all the feilds\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        `/api/chat/group`,\r\n        {\r\n          name: groupChatName,\r\n          users: JSON.stringify(selectedUsers.map((u) => u._id)),\r\n        },\r\n        config\r\n      );\r\n      setChats([data, ...chats]);\r\n      onClose();\r\n      toast({\r\n        title: \"New Group Chat Created!\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Failed to Create the Chat!\",\r\n        description: error.response.data,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <span onClick={onOpen}>{children}</span>\r\n\r\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader\r\n            fontSize=\"35px\"\r\n            fontFamily=\"Adobe Caslon Italic\"\r\n            d=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            Create Group Chat\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\r\n            <FormControl>\r\n              <Input\r\n                placeholder=\"Chat Name\"\r\n                mb={3}\r\n                onChange={(e) => setGroupChatName(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            <FormControl>\r\n              <Input\r\n                placeholder=\"Add Users eg: John, Piyush, Jane\"\r\n                mb={1}\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\">\r\n              {selectedUsers.map((u) => (\r\n                <UserBadgeItem\r\n                  key={u._id}\r\n                  user={u}\r\n                  handleFunction={() => handleDelete(u)}\r\n                />\r\n              ))}\r\n            </Box>\r\n            {loading ? (\r\n              // <ChatLoading />\r\n              <div>Loading...</div>\r\n            ) : (\r\n              searchResult\r\n                ?.slice(0, 4)\r\n                .map((user) => (\r\n                  <UserListItem\r\n                    key={user._id}\r\n                    user={user}\r\n                    handleFunction={() => handleGroup(user)}\r\n                  />\r\n                ))\r\n            )}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button onClick={handleSubmit} colorScheme=\"blue\">\r\n              Create Chat\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GroupChatModal;\r\n","import { AddIcon } from \"@chakra-ui/icons\";\r\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getSender } from \"../config/ChatLogics\";\r\nimport ChatLoading from \"./ChatLoading\";\r\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\r\nimport { Button } from \"@chakra-ui/react\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\n\r\nconst MyChats = ({ fetchAgain }) => {\r\n  const [loggedUser, setLoggedUser] = useState();\r\n\r\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\r\n\r\n  const toast = useToast();\r\n\r\n  const fetchChats = async () => {\r\n    // console.log(user._id);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\"/api/chat\", config);\r\n      setChats(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the chats\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\r\n    fetchChats();\r\n    // eslint-disable-next-line\r\n  }, [fetchAgain]);\r\n\r\n  return (\r\n    <Box\r\n      d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\r\n      flexDir=\"column\"\r\n      alignItems=\"center\"\r\n      p={3}\r\n      bg=\"white\"\r\n      w={{ base: \"100%\", md: \"31%\" }}\r\n      borderRadius=\"lg\"\r\n      borderWidth=\"1px\"\r\n    >\r\n      <Box\r\n        pb={3}\r\n        px={3}\r\n        fontSize={{ base: \"28px\", md: \"30px\" }}\r\n        fontFamily=\"Adobe Caslon Italic\"\r\n        d=\"flex\"\r\n        w=\"100%\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        My Chats\r\n        <GroupChatModal>\r\n          <Button\r\n            d=\"flex\"\r\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\r\n            rightIcon={<AddIcon />}\r\n          >\r\n            New Group Chat\r\n          </Button>\r\n        </GroupChatModal>\r\n      </Box>\r\n      <Box\r\n        d=\"flex\"\r\n        flexDir=\"column\"\r\n        p={3}\r\n        bg=\"#F8F8F8\"\r\n        w=\"100%\"\r\n        h=\"100%\"\r\n        borderRadius=\"lg\"\r\n        overflowY=\"hidden\"\r\n      >\r\n        {chats ? (\r\n          <Stack overflowY=\"scroll\">\r\n            {chats.map((chat) => (\r\n              <Box\r\n                onClick={() => setSelectedChat(chat)}\r\n                cursor=\"pointer\"\r\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\r\n                color={selectedChat === chat ? \"white\" : \"black\"}\r\n                px={3}\r\n                py={2}\r\n                borderRadius=\"lg\"\r\n                key={chat._id}\r\n              >\r\n                <Text>\r\n                  {!chat.isGroupChat\r\n                    ? getSender(loggedUser, chat.users)\r\n                    : chat.chatName}\r\n                </Text>\r\n                {chat.latestMessage && (\r\n                  <Text fontSize=\"xs\">\r\n                    <b>{chat.latestMessage.sender.name} : </b>\r\n                    {chat.latestMessage.content.length > 50\r\n                      ? chat.latestMessage.content.substring(0, 51) + \"...\"\r\n                      : chat.latestMessage.content}\r\n                  </Text>\r\n                )}\r\n              </Box>\r\n            ))}\r\n          </Stack>\r\n        ) : (\r\n          <ChatLoading />\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MyChats;\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport {\r\n  Menu,\r\n  MenuButton,\r\n  MenuDivider,\r\n  MenuItem,\r\n  MenuList,\r\n} from \"@chakra-ui/menu\";\r\nimport {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerContent,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n} from \"@chakra-ui/modal\";\r\nimport { Tooltip } from \"@chakra-ui/tooltip\";\r\nimport { BellIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\r\nimport { Avatar } from \"@chakra-ui/avatar\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport ChatLoading from \"../ChatLoading\";\r\nimport { Spinner } from \"@chakra-ui/spinner\";\r\nimport ProfileModal from \"./ProfileModal\";\r\nimport NotificationBadge from \"react-notification-badge\";\r\nimport { Effect } from \"react-notification-badge\";\r\nimport { getSender } from \"../../config/ChatLogics\";\r\nimport UserListItem from \"../userAvatar/UserListItem\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\n\r\nfunction SideDrawer() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingChat, setLoadingChat] = useState(false);\r\n\r\n  const {\r\n    setSelectedChat,\r\n    user,\r\n    notification,\r\n    setNotification,\r\n    chats,\r\n    setChats,\r\n  } = ChatState();\r\n\r\n  const toast = useToast();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const history = useHistory();\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.removeItem(\"userInfo\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const handleSearch = async () => {\r\n    if (!search) {\r\n      toast({\r\n        title: \"Please Enter something in search\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top-left\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\r\n\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Search Results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const accessChat = async (userId) => {\r\n    console.log(userId);\r\n\r\n    try {\r\n      setLoadingChat(true);\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\r\n\r\n      if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\r\n      setSelectedChat(data);\r\n      setLoadingChat(false);\r\n      onClose();\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error fetching the chat\",\r\n        description: error.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        d=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        bg=\"white\"\r\n        w=\"100%\"\r\n        p=\"5px 10px 5px 10px\"\r\n        borderWidth=\"5px\"\r\n      >\r\n        <Tooltip label=\"Search Users to chat\" hasArrow placement=\"bottom-end\">\r\n          <Button variant=\"ghost\" onClick={onOpen}>\r\n            <i className=\"fas fa-search\"></i>\r\n            <Text d={{ base: \"none\", md: \"flex\" }} px={4}>\r\n              Search User\r\n            </Text>\r\n          </Button>\r\n        </Tooltip>\r\n        <Text fontSize=\"2xl\" fontFamily=\"Adobe Caslon Italic\">\r\n          Varun-Chat-Wave\r\n        </Text>\r\n        <div>\r\n          <Menu>\r\n            <MenuButton p={1}>\r\n              <NotificationBadge\r\n                count={notification.length}\r\n                effect={Effect.SCALE}\r\n              />\r\n              <BellIcon fontSize=\"2xl\" m={1} />\r\n            </MenuButton>\r\n            <MenuList pl={2}>\r\n              {!notification.length && \"No New Messages\"}\r\n              {notification.map((notif) => (\r\n                <MenuItem\r\n                  key={notif._id}\r\n                  onClick={() => {\r\n                    setSelectedChat(notif.chat);\r\n                    setNotification(notification.filter((n) => n !== notif));\r\n                  }}\r\n                >\r\n                  {notif.chat.isGroupChat\r\n                    ? `New Message in ${notif.chat.chatName}`\r\n                    : `New Message from ${getSender(user, notif.chat.users)}`}\r\n                </MenuItem>\r\n              ))}\r\n            </MenuList>\r\n          </Menu>\r\n          <Menu>\r\n            <MenuButton as={Button} bg=\"white\" rightIcon={<ChevronDownIcon />}>\r\n              <Avatar\r\n                size=\"sm\"\r\n                cursor=\"pointer\"\r\n                name={user.name}\r\n                src={user.pic}\r\n              />\r\n            </MenuButton>\r\n            <MenuList>\r\n              <ProfileModal user={user}>\r\n                <MenuItem>My Profile</MenuItem>{\" \"}\r\n              </ProfileModal>\r\n              <MenuDivider />\r\n              <MenuItem onClick={logoutHandler}>Logout</MenuItem>\r\n            </MenuList>\r\n          </Menu>\r\n        </div>\r\n      </Box>\r\n\r\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\r\n        <DrawerOverlay />\r\n        <DrawerContent>\r\n          <DrawerHeader borderBottomWidth=\"1px\">Search Users</DrawerHeader>\r\n          <DrawerBody>\r\n            <Box d=\"flex\" pb={2}>\r\n              <Input\r\n                placeholder=\"Search by name or email\"\r\n                mr={2}\r\n                value={search}\r\n                onChange={(e) => setSearch(e.target.value)}\r\n              />\r\n              <Button onClick={handleSearch}>Go</Button>\r\n            </Box>\r\n            {loading ? (\r\n              <ChatLoading />\r\n            ) : (\r\n              searchResult?.map((user) => (\r\n                <UserListItem\r\n                  key={user._id}\r\n                  user={user}\r\n                  handleFunction={() => accessChat(user._id)}\r\n                />\r\n              ))\r\n            )}\r\n            {loadingChat && <Spinner ml=\"auto\" d=\"flex\" />}\r\n          </DrawerBody>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SideDrawer;\r\n","import { Box } from \"@chakra-ui/layout\";\r\nimport { useState } from \"react\";\r\nimport Chatbox from \"../components/Chatbox\";\r\nimport MyChats from \"../components/MyChats\";\r\nimport SideDrawer from \"../components/miscellaneous/SideDrawer\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\n\r\nconst Chatpage = () => {\r\n  const [fetchAgain, setFetchAgain] = useState(false);\r\n  const { user } = ChatState();\r\n\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      {user && <SideDrawer />}\r\n      <Box d=\"flex\" justifyContent=\"space-between\" w=\"100%\" h=\"91.5vh\" p=\"10px\">\r\n        {user && <MyChats fetchAgain={fetchAgain} />}\r\n        {user && (\r\n          <Chatbox fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\r\n        )}\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatpage;\r\n","import \"./App.css\";\r\nimport Homepage from \"./Pages/Homepage\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Chatpage from \"./Pages/Chatpage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Route path=\"/\" component={Homepage} exact />\r\n      <Route path=\"/chats\" component={Chatpage} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\nimport ChatProvider from \"./Context/ChatProvider\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <ChakraProvider>\r\n    <BrowserRouter>\r\n      <ChatProvider>\r\n        <App />\r\n      </ChatProvider>\r\n    </BrowserRouter>\r\n  </ChakraProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}